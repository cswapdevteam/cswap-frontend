{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\lol\\\\Desktop\\\\cswap-core\\\\cswap-frontend\\\\src\\\\views\\\\Profit\\\\components\\\\CakeStats.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Card, Heading } from '@gameswapfinance/uikit';\nimport BigNumber from 'bignumber.js/bignumber';\nimport styled from 'styled-components';\nimport useBlock from 'hooks/useBlock';\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport CardValue from '../../Home/components/CardValue';\nimport { useFarms } from '../../../state/hooks';\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`;\n\nconst CakeStats = () => {\n  _s();\n\n  const totalSupply = useTotalSupply();\n  const burnedBalance = useBurnedBalance(getCakeAddress());\n  const farms = useFarms();\n  const block = useBlock();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const blocksTillProfit = new BigNumber(141000 * 1000000000000000000).minus(circSupply);\n  let eggPerBlock = 0;\n\n  if (farms && farms[0] && farms[0].eggPerBlock) {\n    eggPerBlock = new BigNumber(farms[0].eggPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Heading, {\n    as: \"h3\",\n    children: blocksTillProfit && /*#__PURE__*/_jsxDEV(CardValue, {\n      fontSize: \"24px\",\n      value: Math.max(14504555 - block, 0),\n      decimals: 0,\n      prefix: \"Blocks until profit sharing \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CakeStats, \"s0G33Nd3dHngRCVBzl8sKH0wKts=\", false, function () {\n  return [useTotalSupply, useBurnedBalance, useFarms, useBlock];\n});\n\n_c = CakeStats;\nexport default CakeStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"CakeStats\");","map":{"version":3,"sources":["C:/Users/lol/Desktop/cswap-core/cswap-frontend/src/views/Profit/components/CakeStats.tsx"],"names":["React","Card","Heading","BigNumber","styled","useBlock","useTotalSupply","useBurnedBalance","getCakeAddress","CardValue","useFarms","StyledCakeStats","Row","div","CakeStats","totalSupply","burnedBalance","farms","block","circSupply","minus","blocksTillProfit","eggPerBlock","pow","toNumber","Math","max"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAyBC,OAAzB,QAA8C,wBAA9C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,uBAAjD;AAEA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,SAASC,QAAT,QAA2C,sBAA3C;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACH,IAAD,CAAO;AACrC;AACA;AACA,CAHA;AAKA,MAAMW,GAAG,GAAGR,MAAM,CAACS,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,WAAW,GAAGT,cAAc,EAAlC;AACA,QAAMU,aAAa,GAAGT,gBAAgB,CAACC,cAAc,EAAf,CAAtC;AACA,QAAMS,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAMQ,KAAK,GAAGb,QAAQ,EAAtB;AACA,QAAMc,UAAU,GAAGJ,WAAW,GAAGA,WAAW,CAACK,KAAZ,CAAkBJ,aAAlB,CAAH,GAAsC,IAAIb,SAAJ,CAAc,CAAd,CAApE;AACA,QAAMkB,gBAAgB,GAAG,IAAIlB,SAAJ,CAAc,SAAS,mBAAvB,EAA4CiB,KAA5C,CAAkDD,UAAlD,CAAzB;AAEA,MAAIG,WAAW,GAAG,CAAlB;;AACA,MAAIL,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAAL,CAASK,WAAlC,EAA+C;AAC7CA,IAAAA,WAAW,GAAG,IAAInB,SAAJ,CAAcc,KAAK,CAAC,CAAD,CAAL,CAASK,WAAvB,EAAoCT,GAApC,CAAwC,IAAIV,SAAJ,CAAc,EAAd,EAAkBoB,GAAlB,CAAsB,EAAtB,CAAxC,EAAmEC,QAAnE,EAAd;AACD;;AAED,sBACE,QAAC,OAAD;AAAS,IAAA,EAAE,EAAC,IAAZ;AAAA,cACGH,gBAAgB,iBACf,QAAC,SAAD;AACE,MAAA,QAAQ,EAAC,MADX;AAEE,MAAA,KAAK,EAAEI,IAAI,CAACC,GAAL,CAAS,WAAWR,KAApB,EAA2B,CAA3B,CAFT;AAGE,MAAA,QAAQ,EAAE,CAHZ;AAIE,MAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzBD;;GAAMJ,S;UACgBR,c,EACEC,gB,EACRG,Q,EACAL,Q;;;KAJVS,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Card, CardBody, Heading, Text } from '@gameswapfinance/uikit'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport CardValue from '../../Home/components/CardValue'\r\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = useBurnedBalance(getCakeAddress())\r\n  const farms = useFarms()\r\n  const block = useBlock()\r\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\r\n  const blocksTillProfit = new BigNumber(141000 * 1000000000000000000).minus(circSupply)\r\n\r\n  let eggPerBlock = 0\r\n  if (farms && farms[0] && farms[0].eggPerBlock) {\r\n    eggPerBlock = new BigNumber(farms[0].eggPerBlock).div(new BigNumber(10).pow(18)).toNumber()\r\n  }\r\n\r\n  return (\r\n    <Heading as=\"h3\">\r\n      {blocksTillProfit && (\r\n        <CardValue\r\n          fontSize=\"24px\"\r\n          value={Math.max(14504555 - block, 0)}\r\n          decimals={0}\r\n          prefix=\"Blocks until profit sharing \"\r\n        />\r\n      )} \r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n"]},"metadata":{},"sourceType":"module"}